{"version":3,"sources":["GoodsList.tsx","ButtonStart.tsx","ButtonReverse.tsx","ButtonSort.tsx","ButtonReset.tsx","App.tsx","index.tsx"],"names":["GoodsList","props","goods","className","map","good","ButtonStart","start","type","onClick","ButtonReverse","React","memo","reverse","ButtonSort","sortGoods","sortBy","ButtonReset","reset","goodsFromServer","App","state","isStarted","isReversed","setState","getVisibleGoods","visibleGoods","sort","a","b","localeCompare","length","currentState","sortItem","this","Component","ReactDOM","render","document","getElementById"],"mappings":"yPAMaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,oBAAIC,UAAU,wCAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,kBAAzB,SACGE,GADMA,SCNJC,EAA+B,SAACL,GAC3C,IAAQM,EAAUN,EAAVM,MAER,OACE,wBACEC,KAAK,SACLC,QAASF,EACTJ,UAAU,kBAHZ,oBCJSO,EAAiCC,IAAMC,MAClD,SAACX,GACC,IAAQY,EAAYZ,EAAZY,QAER,OACE,wBACEL,KAAK,SACLC,QAASI,EACTV,UAAU,kBAHZ,wBCJOW,EAA8BH,IAAMC,MAC/C,SAACX,GACC,IAAQc,EAAsBd,EAAtBc,UAAWC,EAAWf,EAAXe,OAEnB,OACE,wBACER,KAAK,SACLC,QAAS,kBAAMM,EAAUC,IACzBb,UAAU,kBAHZ,SAKc,QAAXa,EACG,sBACA,sBCbCC,EAA+BN,IAAMC,MAChD,SAACX,GACC,IAAQiB,EAAUjB,EAAViB,MAER,OACE,wBACEV,KAAK,SACLC,QAASS,EACTf,UAAU,iBAHZ,sBCDAgB,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgGaC,E,4MArFbC,MAAQ,CACNnB,MAAM,GAAD,OAAMiB,GACXG,WAAW,EACXC,YAAY,EACZP,OAAQ,I,EAGVT,MAAQ,WACN,EAAKiB,SAAS,CAAEF,WAAW,K,EAG7BG,gBAAkB,WAChB,MAII,EAAKJ,MAHPnB,EADF,EACEA,MACAqB,EAFF,EAEEA,WACAP,EAHF,EAGEA,OAGEU,EAAexB,EAEnB,GAAIc,EACF,OAAQA,GACN,IAAK,MACHU,EAAe,YAAIA,GAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAChE,MACF,IAAK,SACHH,EAAe,YAAIA,GAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAC7D,MACF,QACE,OAAOL,EAQb,OAJIH,IACFG,EAAe,YAAIA,GAAcb,WAG5Ba,G,EAGTb,QAAU,WACR,EAAKW,UAAS,SAACQ,GAAD,MAAmB,CAC/BT,YAAaS,EAAaT,gB,EAI9BR,UAAY,SAACkB,GACX,EAAKT,SAAS,CAAER,OAAQiB,EAAUV,YAAY,K,EAGhDL,MAAQ,WACN,EAAKM,SAAS,CACZtB,MAAM,GAAD,OAAMiB,GACXG,WAAW,EACXC,YAAY,EACZP,OAAQ,M,4CAIZ,WACE,IAAQM,EAAcY,KAAKb,MAAnBC,UAEFI,EAAeQ,KAAKT,kBAE1B,OACE,sBAAKtB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBACEmB,EAGE,qCACE,sBAAKnB,UAAU,eAAf,UACE,cAACO,EAAD,CAAeG,QAASqB,KAAKrB,UAC7B,cAACC,EAAD,CAAYC,UAAWmB,KAAKnB,UAAWC,OAAO,QAC9C,cAACF,EAAD,CAAYC,UAAWmB,KAAKnB,UAAWC,OAAO,WAC9C,cAACC,EAAD,CAAaC,MAAOgB,KAAKhB,WAE3B,cAAC,EAAD,CAAWhB,MAAOwB,OATpB,qBAAKvB,UAAU,eAAf,SAA8B,cAAC,EAAD,CAAaI,MAAO2B,KAAK3B,iB,GArEjDI,IAAMwB,WC3BxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9a9d0d9c.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  const { goods } = props;\n\n  return (\n    <ul className=\"App__list list-group list-group-flush\">\n      {goods.map(good => (\n        <li key={good} className=\"list-group-item\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  start: () => void;\n};\n\nexport const ButtonStart: React.FC<Props> = (props) => {\n  const { start } = props;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={start}\n      className=\"btn btn-success\"\n    >\n      Start\n    </button>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  reverse: () => void;\n};\n\nexport const ButtonReverse: React.FC<Props> = React.memo(\n  (props) => {\n    const { reverse } = props;\n\n    return (\n      <button\n        type=\"button\"\n        onClick={reverse}\n        className=\"btn btn-primary\"\n      >\n        Reverse\n      </button>\n    );\n  },\n);\n","import React from 'react';\n\ntype Props = {\n  sortGoods: (sortItem: 'a-z' | 'length') => void;\n  sortBy: 'a-z' | 'length';\n};\n\nexport const ButtonSort: React.FC<Props> = React.memo(\n  (props) => {\n    const { sortGoods, sortBy } = props;\n\n    return (\n      <button\n        type=\"button\"\n        onClick={() => sortGoods(sortBy)}\n        className=\"btn btn-primary\"\n      >\n        {sortBy === 'a-z'\n          ? 'Sort alphabetically'\n          : 'Sort by length'}\n      </button>\n    );\n  },\n);\n","import React from 'react';\n\ntype Props = {\n  reset: () => void;\n};\n\nexport const ButtonReset: React.FC<Props> = React.memo(\n  (props) => {\n    const { reset } = props;\n\n    return (\n      <button\n        type=\"button\"\n        onClick={reset}\n        className=\"btn btn-danger\"\n      >\n        Reset\n      </button>\n    );\n  },\n);\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nimport { GoodsList } from './GoodsList';\nimport { ButtonStart } from './ButtonStart';\nimport { ButtonReverse } from './ButtonReverse';\nimport { ButtonSort } from './ButtonSort';\nimport { ButtonReset } from './ButtonReset';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[];\n  isStarted: boolean;\n  isReversed: boolean;\n  sortBy: string;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: [...goodsFromServer],\n    isStarted: false,\n    isReversed: false,\n    sortBy: '',\n  };\n\n  start = () => {\n    this.setState({ isStarted: true });\n  };\n\n  getVisibleGoods = () => {\n    const {\n      goods,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    let visibleGoods = goods;\n\n    if (sortBy) {\n      switch (sortBy) {\n        case 'a-z':\n          visibleGoods = [...visibleGoods].sort((a, b) => a.localeCompare(b));\n          break;\n        case 'length':\n          visibleGoods = [...visibleGoods].sort((a, b) => a.length - b.length);\n          break;\n        default:\n          return visibleGoods;\n      }\n    }\n\n    if (isReversed) {\n      visibleGoods = [...visibleGoods].reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  reverse = () => {\n    this.setState((currentState) => ({\n      isReversed: !currentState.isReversed,\n    }));\n  };\n\n  sortGoods = (sortItem: 'a-z' | 'length') => {\n    this.setState({ sortBy: sortItem, isReversed: false });\n  };\n\n  reset = () => {\n    this.setState({\n      goods: [...goodsFromServer],\n      isStarted: false,\n      isReversed: false,\n      sortBy: '',\n    });\n  };\n\n  render() {\n    const { isStarted } = this.state;\n\n    const visibleGoods = this.getVisibleGoods();\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n        {!isStarted\n          ? <div className=\"App__buttons\"><ButtonStart start={this.start} /></div>\n          : (\n            <>\n              <div className=\"App__buttons\">\n                <ButtonReverse reverse={this.reverse} />\n                <ButtonSort sortGoods={this.sortGoods} sortBy=\"a-z\" />\n                <ButtonSort sortGoods={this.sortGoods} sortBy=\"length\" />\n                <ButtonReset reset={this.reset} />\n              </div>\n              <GoodsList goods={visibleGoods} />\n            </>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}